/************** Right Side decoder ***************/
;;;; Decoder Placement on Right hand side

width = W*del_w+b_on_right*delW_buff+0.4125
row_bits = round( (log(D) / log(2)))
ib = 0
height = del_h * D
temp1=height
for(j 1 b_on_right
port_no=wl_array[2*j-1]
for(i 1 (row_bits+1)*2
       if( i==1 then width = width + 0.185
	   temp1=height+3*PITCH_M2
           dbCreatePath(cv "metal2" list(width:0.0 width:temp1) 0.07)
	   dbCreateInst(cv M2M3_cvB nil list(width temp1-0.035) "R0")	   
       else if(i== (row_bits+1)*2 then width = width + 0.37
	       temp1=height+3*PITCH_M2
               dbCreatePath(cv "metal2" list(width:0.0 width:temp1) 0.07)
               dbCreateInst(cv M2M3_cvB nil list(width temp1-0.035) "R0")	   
                 else width = width + 0.14
	              temp1=height
		     if(flagV==0 then          
	             dbCreatePath(cv "metal1" list(width:0.0 width:temp1) 0.065)
                     flagV=1
                     else
	             dbCreatePath(cv "metal2" list(width:0.0 width:temp1) 0.07)
                     flagV=0);if
       ));if
   );for 	
width = width+0.185
); for

/*************** Input Buffer Placement **********************/
if(DC>1 then temp=floor(2*PITCH_M2*(Rp+Wp)/delW_col)  if(temp<Rp then temp=Rp/2)
   else temp=Rp)
cnt=0
for(i 1 b_on_right
     port_no=wl_array[2*i-1]
     if((port_no<=temp || port_no>Rp) then    cnt=cnt+1))

temp1=(row_bits+1)*2*PITCH_M2+0.46
buff_cnt=0
width = W*del_w+4*PITCH_M2+(b_on_right-1)*delW_buff;+0.02
if(cnt>4 then
    dbCreatePath(cv "metal2" list(del_w*W+3*PITCH_M2:del_h*D+delH_prec
		width-(cnt-1)*delW_buff-PITCH_M2:del_h*D+delH_prec
		width-(cnt-1)*delW_buff-PITCH_M2:del_h*D+3*PITCH_M2+0.67+0.6425+(row_bits-1)*(delH_buff+PITCH_M2*2*(cnt-4))
		width+delW_buff:del_h*D+3*PITCH_M2+0.67+0.6425+(row_bits-1)*(delH_buff+PITCH_M2*2*(cnt-4))) 0.07);GND
    dbCreateInst(cv M2M3_cvB nil list(del_w*W+3*PITCH_M2 del_h*D+delH_prec) "R0")
else if(cnt!=0 then
    dbCreatePath(cv "metal2" list(del_w*W+3*PITCH_M2:del_h*D+delH_prec
		width-(cnt-1)*delW_buff-PITCH_M2:del_h*D+delH_prec
		width-(cnt-1)*delW_buff-PITCH_M2:del_h*D+3*PITCH_M2+0.67+0.6425+(row_bits-1)*delH_buff
		width+delW_buff:del_h*D+3*PITCH_M2+0.67+0.6425+(row_bits-1)*delH_buff) 0.07);GND
    dbCreateInst(cv M2M3_cvB nil list(del_w*W+3*PITCH_M2 del_h*D+delH_prec) "R0")
))
for(i 1 b_on_right
     port_no=wl_array[2*i-1]
     height=del_h*D+3*PITCH_M2+0.67
    if((port_no<=temp || port_no>Rp) then    
        if(cnt>4 then
        dbCreatePath(cv "metal2" list(width+2.365-delW_buff:del_h*D+2*PITCH_M2 width+2.365:del_h*D+2*PITCH_M2 
        width+2.365:del_h*D+3*PITCH_M2+0.67+(row_bits-1)*(delH_buff+2*PITCH_M2*(cnt-4))) 0.07);VDD
        if(i==1 then
	dbCreateInst(cv M2M1_cv1 nil list(width+2.365 del_h*D+2*PITCH_M2) "R0"))

        dbCreatePath(cv "metal2" list(width+1.1875:del_h*D+PITCH_M2*4 
	      width+1.1875:del_h*D+3*PITCH_M2+0.67+0.6425+(row_bits-1)*(delH_buff+PITCH_M2*2*(cnt-4))) 0.07);GND
	else
        dbCreatePath(cv "metal2" list(width+2.365-delW_buff:del_h*D+2*PITCH_M2 width+2.365:del_h*D+2*PITCH_M2 
        width+2.365:del_h*D+row_bits*delH_buff) 0.07);VDD
        if(i==1 then
	dbCreateInst(cv M2M1_cv1 nil list(width+2.365 del_h*D+2*PITCH_M2) "R0"))

        dbCreatePath(cv "metal2" list(width+1.1875:del_h*D+PITCH_M2*4 
		      width+1.1875:del_h*D+3*PITCH_M2+0.67+0.6425+(row_bits-1)*delH_buff) 0.07);GND
	) 

    for(j 1 row_bits
	height1=height+buff_cnt*2*PITCH_M2
	dbCreateInst(cv buff3_cv nil list(width height) "MX")        
        if(port_no>Rp then sprintf(str,"AW%d<%d>",port_no-Rp,j-1)
	else sprintf(str,"AR%d<%d>",port_no,j-1))
        dbCreateLabel(cv "metal3" width:height str "centerCenter" "R0" "roman" 0.0275)
        temp2=W*del_w+b_on_right*delW_buff+0.4125+temp1*(i-1)+0.185+2*j*PITCH_M2
        dbCreatePath(cv "metal2" list(temp2:del_h*D temp2:height1) 0.07) 
	dbCreateInst(cv M2M3_cv nil list(temp2 height1) "R0")
        dbCreatePath(cv "metal2" list(temp2-PITCH_M2:del_h*D temp2-PITCH_M2:height1+PITCH_M2) 0.07)
	dbCreateInst(cv M2M3_cv nil list(temp2-PITCH_M2 height1+PITCH_M2) "R0")
        dbCreateInst(cv M2M1_cv nil list(temp2-PITCH_M2 del_h*D) "R90")
        dbCreatePath(cv "metal3" list(width+delW_buff-5*PITCH_M2:height 
				      width+delW_buff-5*PITCH_M2:height1+PITCH_M2 
				      temp2-PITCH_M2:height1+PITCH_M2) 0.07)
        dbCreatePath(cv "metal3" list(width+2.095:height 
				      width+2.095:height1
				      temp2:height1) 0.07)
	dbCreateInst(cv M2M1_cv1 nil list(width+2.095 height) "R90")
	dbCreateInst(cv M2M3_cv nil list(width+2.095 height) "R0")
	if(cnt>4 then 	height=height+delH_buff+(cnt-4)*2*PITCH_M2
        else 	height=height+delH_buff                )                

       )
	width=width-delW_buff
 	buff_cnt++
       );if
   )

if(Rp==1 then maxd_right=del_h*D+4*PITCH_M2
else if(cnt>4 then
maxd_right=del_h*D+4*PITCH_M2+0.67+0.6425+(row_bits-1)*(delH_buff+PITCH_M2*2*(cnt-4));got from the GND wire placed on top of the address buffers
else
maxd_right=del_h*D+4*PITCH_M2+0.67+0.6425+(row_bits-1)*delH_buff)
)
width = W*del_w+5*PITCH_M2+(b_on_right-1)*delW_buff

/*************** Address lines for the bottom part in case of the DC>1 *****************/
if(DC>1 then
buff_cnt=0
cnt=b_on_right-cnt
for(i 1 b_on_right
     port_no=wl_array[2*i-1]
     height=-4*PITCH_M2-0.67
    if((port_no>temp && port_no<=Rp) then    
     if(cnt<=4 then
     dbCreatePath(cv "metal2" list(width+1.1875:height-(row_bits-1)*delH_buff 
				   width+1.1875:-3*PITCH_M2 ) 0.07);GND
     dbCreatePath(cv "metal2" list(width+2.365:height-PITCH_M2
				   width+2.365:-4*PITCH_M2-0.67-0.515-(row_bits-1)*delH_buff) 0.07);VDD
     else
     dbCreatePath(cv "metal2" list(width+1.1875:height-(row_bits-1)*(delH_buff+(cnt-4)*2*PITCH_M2) 
				   width+1.1875:-3*PITCH_M2 ) 0.07);GND
     dbCreatePath(cv "metal2" list(width+2.365:height-PITCH_M2
				   width+2.365:-4*PITCH_M2-0.67-0.515-(row_bits-1)*(delH_buff+(cnt-4)*2*PITCH_M2)) 0.07);VDD
        )
    for(j 1 row_bits
	height1=height-buff_cnt*2*PITCH_M2
	dbCreateInst(cv buff3_cv nil list(width height) "MX")        
        if(port_no>Rp then sprintf(str,"AW%d<%d>",port_no-Rp,j-1)
	else sprintf(str,"AR%d<%d>",port_no,j-1))
        dbCreateLabel(cv "metal3" width:height str "centerCenter" "R0" "roman" 0.0275)
        temp2=W*del_w+b_on_right*delW_buff+0.4125+temp1*(i-1)+0.185+2*j*PITCH_M2
        dbCreatePath(cv "metal2" list(temp2:del_h*D temp2:height1) 0.07) 
	dbCreateInst(cv M2M3_cv nil list(temp2 height1) "R0")
        dbCreatePath(cv "metal2" list(temp2-PITCH_M2:0.00 temp2-PITCH_M2:height1-PITCH_M2) 0.07)
	dbCreateInst(cv M2M3_cv nil list(temp2-PITCH_M2 height1-PITCH_M2) "R0")
        dbCreateInst(cv M2M1_cv nil list(temp2-PITCH_M2 0.00) "R90")
        dbCreatePath(cv "metal3" list(width+delW_buff-5*PITCH_M2:height 
				      width+delW_buff-5*PITCH_M2:height1-PITCH_M2 
				      temp2-PITCH_M2:height1-PITCH_M2) 0.07)
        dbCreatePath(cv "metal3" list(width+2.095:height 
				      width+2.095:height1
				      temp2:height1) 0.07)
	dbCreateInst(cv M2M1_cv1 nil list(width+2.095 height) "R90")
	dbCreateInst(cv M2M3_cv nil list(width+2.095 height) "R0")
	if(cnt<=4 then	height=height-delH_buff                
	else	height=height-delH_buff-(cnt-4)*2*PITCH_M2)
        )
	width=width-delW_buff
 	buff_cnt++
       );if
   )

buff_cnt=0
wl_no=0
sense_temp=floor(2*PITCH_M2*(Rp+Wp)/delW_col)
if(sense_temp<Rp then sense_temp=Rp/2)

for(i 1 Rp-sense_temp
    while((wl_array[wl_no]<=sense_temp || wl_array[wl_no]>Rp)
           wl_no++)
    if(mod(wl_no 2)==1 buff_cnt++)
    wl_no++)

if((buff_cnt>0 && DC>1) then
dbCreatePath(cv "metal2" list(width+delW_buff:-3*PITCH_M2 
		W*del_w+4*PITCH_M2+b_on_right*delW_buff:-3*PITCH_M2) 0.07);GND

dbCreatePath(cv "metal2" list(del_w*W+4*PITCH_M2:-4*PITCH_M2 
			W*del_w+4*PITCH_M2+(b_on_right-buff_cnt)*delW_buff:-4*PITCH_M2
			W*del_w+4*PITCH_M2+(b_on_right-buff_cnt)*delW_buff:-4*PITCH_M2-0.67-0.515-(row_bits-1)*delH_buff
			W*del_w+5*PITCH_M2+b_on_right*delW_buff:-4*PITCH_M2-0.67-0.515-(row_bits-1)*delH_buff) 0.07)
  )
)
/****************** 	NMOS PMOS Placement 	 ********************/

d_no=0
flagV=0
buffer_no=0
for(d_no 0 b_on_right-1
for(i 0 D-1
width = W*del_w+b_on_right*delW_buff+0.4125+0.185+d_no*((row_bits+1)*2*PITCH_M2+0.46)

    if(flagV==1 then
        height = del_h*(i+1) - wl_posi[d_no+1]
    else
        height = del_h*i + wl_posi[d_no+1] ) ; if

l=0
for(k 0 row_bits-1
      if(i<k>==0 then d_bits[l+2]=0 d_bits[l+1]=1
      else d_bits[l+2]=1 d_bits[l+1]=0) ; if
      l=l+2  ) ; for
d_bits[0]=1

l=2*row_bits

width=width+row_bits*2*PITCH_M2-0.025

while(l>=0 
    if(d_bits[l]==1 then 
           if(l==(2*row_bits) then
	   dbCreateParamInst(cv nm_cv nil list(width height) 
		             "R0" i list(
			      list("diffContactRight" "boolean" nil)	
                              list("diffContactLeft" "boolean" nil) ))
	   dbCreateInst(cv M2M1_cv nil list(width+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width:height-0.15 width+0.05:height))
           width=width-2*PITCH_M2  l=l-2
           else if(l==0 then
	   dbCreateParamInst(cv nm_cv nil list(width height) 
		             "R0" i list(
			      list("diffContactLeft" "boolean" nil)	
                              list("diffContactRight" "boolean" nil) ))
	   dbCreateInst(cv M2M1_cv nil list(width+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width:height-0.15 width+0.05:height))
	   dbCreateInst(cv M2M1_cv nil list(width+0.025-PITCH_M2 height) "R90") ;for GND connection
	   dbCreateInst(cv M1N_cv nil list(width-PITCH_M2+0.05 height+0.045) "R0") ;for GND connection
	    width=width-2*PITCH_M2  l=l-2
	   else
	   dbCreateParamInst(cv nm_cv nil list(width height) 
		             "R0" i list(
                              list("diffContactRight" "boolean" nil)
                              list("diffContactLeft" "boolean" nil) ))
	   dbCreateInst(cv M2M1_cv nil list(width+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width:height-0.15 width+0.05:height))
	    width=width-2*PITCH_M2  l=l-2
            ));if;if
    else if(l>=2 then 
	if(d_bits[l-2]==1 then	
           if(l==2 then
	   dbCreateParamInst(cv nm_cv nil list(width-2*PITCH_M2 height) 
		             "R0" i list(
                              list("fingers" "integer" 2)
			      list("diffContactLeft" "boolean" nil)	
                              list("diffContactRight" "boolean" nil)))
	   dbCreateInst(cv M2M1_cv nil list(width-2*PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-2*PITCH_M2+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-2*PITCH_M2:height-0.15 width-2*PITCH_M2+0.05:height))

;	   dbCreateInst(cv M2M1_cv nil list(width-PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-PITCH_M2+0.035 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-PITCH_M2+0.05:height-0.19 width-PITCH_M2+0.1:height))
	   dbCreateInst(cv M2M1_cv nil list(width-3*PITCH_M2+0.025 height) "R90") ;for GND connection
	   dbCreateInst(cv M1N_cv nil list(width-3*PITCH_M2+0.05 height+0.045) "R0") ;for GND connection
	   width=width-4*PITCH_M2 j++ l=l-4
           else if(l==(2*row_bits) then
	   dbCreateParamInst(cv nm_cv nil list(width-2*PITCH_M2-0.05 height) 
		             "R0" i list(
                              list("fingers" "integer" 2)
			      list("diffContactRight" "boolean" nil)	
                              list("diffContactLeft" "boolean" nil) ))
	   dbCreateInst(cv M2M1_cv nil list(width-2*PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-2*PITCH_M2+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-2*PITCH_M2-0.05:height-0.19 width-2*PITCH_M2:height))

;	   dbCreateInst(cv M2M1_cv nil list(width-PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-PITCH_M2+0.035 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-PITCH_M2+0.05:height-0.15 width-PITCH_M2:height))

	   width=width-4*PITCH_M2   j++   l=l-4
           else
	   dbCreateParamInst(cv nm_cv nil list(width-2*PITCH_M2-0.05 height) 
		             "R0" i list(
                              list("fingers" "integer" 2)
                              list("diffContactLeft" "boolean" nil) 
                              list("diffContactRight" "boolean" nil) ))
	   dbCreateInst(cv M2M1_cv nil list(width-2*PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-2*PITCH_M2+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-2*PITCH_M2-0.05:height-0.19 width-2*PITCH_M2:height))

;	   dbCreateInst(cv M2M1_cv nil list(width-PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-PITCH_M2+0.035 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-PITCH_M2+0.05:height-0.19 width-PITCH_M2:height))

	   width=width-4*PITCH_M2  j++ l=l-4
           ));if 

    else if(l==(2*row_bits) then
	   dbCreateParamInst(cv nm_cv nil list(width-PITCH_M2 height) 
		             "R0" i list(
			      list("diffContactRight" "boolean" nil)	
                              list("diffContactLeft" "boolean" nil) ))
;	   dbCreateInst(cv M2M1_cv nil list(width-PITCH_M2+0.025 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width-PITCH_M2+0.025 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-PITCH_M2:height-0.15 width-PITCH_M2+0.05:height))
	   else 	
	   dbCreateParamInst(cv nm_cv nil list(width-PITCH_M2 height) 
		             "R0" i list(
                              list("diffContactLeft" "boolean" nil) 
                              list("diffContactRight" "boolean" nil) ))
;	   dbCreateInst(cv M2M1_cv nil list(width+0.025-PITCH_M2 height-0.1775) "R90")
	   dbCreateInst(cv M1P_cv nil list(width+0.025-PITCH_M2 height-0.1775) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width-PITCH_M2:height-0.15 width-PITCH_M2+0.05:height))
           ) ; if
	    width=width-2*PITCH_M2   l=l-2
      ));if
       );if
) ;while

width = del_w*W+b_on_right*delW_buff+0.4125+0.185+(2*row_bits)*PITCH_M2+0.345+d_no*((row_bits+1)*2*PITCH_M2+0.46)
if(flagV==0 then
	   dbCreateParamInst(cv pm_cv nil list(width height) "R0" i+1 list(
		  list("w" "float" pm_dw)))
	   dbCreateInst(cv M2M1_cv nil list(width+0.025-0.035 height-0.1625) "R90")
	   dbCreateInst(cv M1P_cv nil list(width+0.025-0.035 height-0.1625) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width:height-0.1675 width+0.05:height))
	   dbCreateRect(cv list("metal1" "drawing") list(width-0.09:height width-0.09-2*PITCH_M2:height+0.065))
else
	   temp = pm_dw-0.09
	   if(height-temp-0.055-0.275-(del_h*(i-1)+wl_posi[d_no+1]+pm_dw+0.055)<-0.0025 then	    
	   temp=-(del_h*(i-1)+wl_posi[d_no+1]+pm_dw+0.055+0.075+0.2)+height)

	   dbCreateParamInst(cv pm_cv nil list(width height-temp) "R0" i+1 list(
		  list("w" "float" pm_dw)))
	   dbCreateInst(cv M2M1_cv nil list(width+0.025-0.035 height-0.1625-temp) "R90")
	   dbCreateInst(cv M1P_cv nil list(width+0.025-0.035 height-0.1625-temp) "R0")
	   dbCreateRect(cv list("poly" "drawing") list(width:height-0.1675-temp width+0.05:height-temp))
	   wref = del_w*W+b_on_right*delW_buff+0.4125+d_no*((row_bits+1)*2*PITCH_M2+0.46)
	   if(height-temp+PITCH_M1/4>height then
	   dbCreatePath(cv "metal1" list(wref+0.185+(2*row_bits+1)*PITCH_M2-0.025:height+0.045 
					 wref+0.185+(2*row_bits+1)*PITCH_M2-0.025:height-temp+PITCH_M1/4
					 width:height-temp+PITCH_M1/4) 0.065)
	   else
	   dbCreatePath(cv "metal1" list(wref+0.185+(2*row_bits+1)*PITCH_M2-0.025:height+0.045 
					 width:height+0.045) 0.065)
	     )


) ; if


width = del_w*W+b_on_right*delW_buff+0.4125+d_no*((row_bits+1)*2*PITCH_M2+0.46)
temp=0.185+(2*row_bits+1)*PITCH_M2
dbCreatePath(cv "pwell" list(width+temp+0.045:height+0.045 width:height+0.045) 0.2)
dbCreateInst(cv M2M3_cvB nil list(width+temp height) "R0")
dbCreateInst(cv M2M1_cv nil list(width+temp height) "R90")
dbCreateInst(cv M1N_cv nil list(width+temp-0.025 height+0.045) "R0")

   if(flagV==1 then
      temp1=d_no*((row_bits+1)*2*PITCH_M2+0.46)+2*(row_bits+1)*PITCH_M2+0.185+delW_buff*buffer_no
      temp2=del_h*(i+1)-wl_posi[2*d_no+1]
   else
      temp1=d_no*((row_bits+1)*2*PITCH_M2+0.46)+2*(row_bits+1)*PITCH_M2+0.185+delW_buff*(b_on_right-1-buffer_no)
      temp2=del_h*i+wl_posi[2*d_no+1]
     );if
;       temp2=0
;width = width-(row_bits*2+1)*PITCH_M2-0.185
dbCreatePath(cv "metal3" list(width+temp:height width+temp:temp2 width+temp-temp1-PITCH_M2:temp2) 0.07)
dbCreatePath(cv "metal3" list(width+temp-temp1-delW_buff+5*PITCH_M2:temp2  del_w*W+0.11:temp2) 0.07)

/********	NMOS in series connection by acitve placement		****************/
width = del_w*W+b_on_right*delW_buff+0.4125+0.185+d_no*((row_bits+1)*2*PITCH_M2+0.46)
dbCreateRect(cv list("active" "drawing") list(width:height width+(row_bits*2+1)*PITCH_M2:height+0.09))
dbCreateRect(cv list("nimplant" "drawing") list(width:height width+(row_bits*2+1)*PITCH_M2:height+0.09))

/******** Pwell placement between last buffer and 1st decoder (to avoid DRC) *********/
if(d_no==0 then
width = del_w*W+b_on_right*delW_buff+0.4125
dbCreatePath(cv "pwell" list(width+PITCH_M2:height+0.045 width-0.16-0.115:height+0.045) 0.2)
)

    if( flagV==0 then flagV=1
    else flagV=0)

)       ;for(i 0 D-1 
buffer_no++
)	;for(d_no 0  

for(d_no 0 b_on_right-1
     width = del_w*W+b_on_right*delW_buff+0.4125+0.185+d_no*((row_bits+1)*2*PITCH_M2+0.46)
     dbCreatePath(cv "metal2" list(width-PITCH_M2:-3*PITCH_M2 width-PITCH_M2:D*del_h) 0.07)
     dbCreateInst(cv M2M1_cv1 nil list(width-PITCH_M2 -3*PITCH_M2) "R0")
     width = width+row_bits*2*PITCH_M2

     dbCreatePath(cv "pwell" list(width+0.085:0 width+0.085:D*del_h) 0.2)
     dbCreateInst(cv PTAP_cv nil list(width+0.085 0.1) "R0")
     dbCreatePath(cv "metal1" list(width+0.085:0.1 width+0.085:-3*PITCH_M2) 0.065)
;     dbCreateInst(cv M2M1_cv nil list(width+0.085 -3*PITCH_M2) "R0")

     dbCreateInst(cv NTAP_cv nil list(width+0.465 -0.1) "R0")
     dbCreatePath(cv "nwell" list(width+0.37:-0.1 width+0.37:D*del_h) 0.37)

     dbCreatePath(cv "metal1" list(width+0.085+0.38:-0.1 width+0.085+0.38:D*del_h+2*PITCH_M2) 0.065)
     if(d_no==b_on_right-1 then
     dbCreatePath(cv "metal1" list(width-(d_no+1)*((row_bits+1)*2*PITCH_M2+0.46):D*del_h+2*PITCH_M2 
                                   width+0.085+0.38+PITCH_M1:D*del_h+2*PITCH_M2) 0.065)
     dbCreateInst(cv M2M1_cv nil list(width-(d_no+1)*((row_bits+1)*2*PITCH_M2+0.46) D*del_h+2*PITCH_M2) "R0")
     dbCreatePath(cv "metal2" list(width-(d_no+1)*((row_bits+1)*2*PITCH_M2+0.46):D*del_h+2*PITCH_M2 
                              del_w*W+PITCH_M2:D*del_h+2*PITCH_M2) 0.07)
     dbCreateInst(cv M2M3_cv nil list(del_w*W+PITCH_M2 D*del_h+2*PITCH_M2) "R90")

     dbCreatePath(cv "metal1" list(width+PITCH_M2:-3*PITCH_M2 del_w*W-PITCH_M1/4:-3*PITCH_M2) 0.065);GND
     dbCreatePath(cv "metal1" list(del_w*W:-3*PITCH_M2 del_w*W:PITCH_M1/4) 0.065)

     ;;;;;;; CLK Line
     temp1=2.7+del_w*W+(b_on_right-1)*delW_buff+b_on_right*((row_bits+1)*2*PITCH_M2+0.46)
     dbCreatePath(cv "metal3" list(temp1:del_h*D+3*PITCH_M2 del_w*W+4*PITCH_M2:del_h*D+3*PITCH_M2) 0.07)
     dbCreateInst(cv M2M3_cvB nil list(del_w*W+4.5*PITCH_M2 del_h*D+3*PITCH_M2) "R90")

       )
   )

